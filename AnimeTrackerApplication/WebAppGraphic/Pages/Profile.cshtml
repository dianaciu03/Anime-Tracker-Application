@page
@using Logic.Animes
@using Logic.Characters
@using Logic.Enums
@using Logic.Mangas
@using Logic.Profiles
@model WebAppGraphic.Pages.ProfileModel
@{
	Layout = "_LayoutLogout";
}

<div class="background-img-profile"></div>
<div class="profile-container">
	<div class="profile-header">
		<div style="margin-left:10px;">
			<div class="profile-picture-container">
				@if (Model.HasProfilePicture(Model.CurrentUser.Profile.Id))
				{
					Model.GetUserAndProfile();
					int id = Model.CurrentUser.Profile.Id;
					var base64Img = Convert.ToBase64String(Model.GetBase64Picture(id));
					<img src="data:image/png;base64,@base64Img" alt="Profile Picture">
				}
				else
				{
					<img src="/images/default-profile-picture.png" alt="Profile Picture">
				}
				<div class="change-picture-overlay">
					<form style="margin-left:100px;" method="post" enctype="multipart/form-data" asp-page-handler="ChangeProfilePicture" class="upload-form">
						<div class="mb-3">
							<input asp-for="ImageUpload" />
							<span asp-validation-for="ImageUpload"></span>
						</div>
						<button type="submit" class="upload-button">Submit</button>
					</form>
				</div>
			</div>
		</div>
		<div>
			@if(Model.CurrentUser.Profile.Username == Model.UsernameInEditMode) 
			{
				<form method="post" asp-page-handler="SubmitChanges">
					<div class="row align-items-center" style="margin-bottom:16px">
						<div class="col-auto d-flex align-items-center">
							<input type="text" style="font-size: 24px; width:216px" value="@Model.UsernameInEditMode" asp-for="UsernameInEditMode" class="mr-2" />
							<button type="submit" style="font-size: 22px; margin-left:5px" class="btn btn-pencil">Submit</button>
						</div>
					</div>
				</form>
			}
			else 
			{
				<div class="row align-items-center">
					<div class="col-auto">
						<label class="username" asp-for="CurrentUser.Profile.Username">@Model.CurrentUser.Profile.Username</label>
					</div>
					<div class="col-auto">
						<form method="post" asp-page-handler="EditUsername">
							<input type="hidden" name="action" value="@Model.CurrentUser.Profile.Username" />
							<button type="submit" class="btn btn-pencil">
								<i class="fas fa-pencil-alt"></i>
							</button>
						</form>
					</div>
				</div>
			}
			<p class="join-date" asp-for="CurrentUser.JoinDate">Joined: @Model.CurrentUser.JoinDateParsed()</p>
			<div class="genres">Genres: @Model.CurrentUser.Profile.GetGenresString()</div>
			<button style="margin-top:30px;" id="openPopupBtn" class="btn btn-content-details" data-bs-toggle="modal" data-bs-target="#myModal">Preferred genres</button>
		</div>
	</div>
	<div class="statistics-box text-white">
		<h2 class="statistics-title text-center">Life on Anime</h2>
		<div class="watch-time-details text-center">
			<span>@Model.CurrentUser.Profile.CalculateAnimeMinutes() minutes</span>
			<span>@Model.CurrentUser.Profile.CalculateAnimeHours() hours</span>
			<span>@Model.CurrentUser.Profile.CalculateAnimeDays() days</span>
			<span>@Model.CurrentUser.Profile.CalculateAnimeMonths() months</span>
			<span>@Model.CurrentUser.Profile.CalculateAnimeYears() years</span>
		</div>
	</div>
	@foreach (CustomList list in Model.CurrentUser.Profile.GetAllCustomLists())
	{
		<h1 style="padding-left: 0; padding-right: 0;" class="second-title text-white">@list.Name</h1>
		if (list.GetAllContent().Count > 0)
		{
			<div style="padding-left: 0; padding-right: 0;" class="container-fluid container-display bg-dark">

				@if (list.ContentType == "Anime")
				{

					@foreach (object content in list.GetAllContent())
					{
						Anime anime = (Anime)content;
						<a asp-page="ContentDetails" asp-route-id="@anime.Id">
							<div class="d-flex flex-column align-items-center">
								<img src="@anime.ImageURL" style="width: 190px; height: 260px;" />
								<p style=" padding-top: 8px">@anime.Name</p>
								<p>@anime.SeasonAnime @anime.ReleaseYear</p>
							</div>
						</a>
					}
				}
				else if (list.ContentType == "Manga")
				{
					@foreach (object content in list.GetAllContent().Take(6))
					{
						Manga manga = (Manga)content;
						<a asp-page="ContentDetailsManga" asp-route-id="@manga.Id">
							<div class="d-flex flex-column align-items-center">
								<img src="@manga.ImageURL" style="width: 190px; height: 260px;" />
								<p style=" padding-top: 8px">@manga.Name</p>
								<p>@manga.Rating / 5 ⭐</p>
							</div>
						</a>
					}
				}
				else if (list.ContentType == "Character" && list.Name == "Favourite characters")
				{
					@foreach (object content in list.GetAllContent())
					{
						Character character = (Character)content;
						<a>
							<div style="width: 200px; position: relative;" class="d-flex flex-column align-items-center">
								<img src="@character.Image" style="height: 260px;" />
								<form method="post" style="position: absolute; top: 10px; right: 10px;" asp-page-handler="RemoveFromFavourites">
									<button type="submit" class="heart-button bg-transparent border-0 p-0" name="action" value="@character.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Remove from favourites">&#x2764;</button>
								</form>
								<p style="padding-top: 8px; color: white;">@character.Name</p>
								@if (character.AnimeId != 0)
								{
									Anime anime = Model.GetAnimeById(character.AnimeId);
									<p style="padding-top: 8px; display: flex; justify-content: center; text-align: center; color: white;">From anime: @anime.Name</p>
								}
								@if (character.MangaId != 0)
								{
									Manga manga = Model.GetMangaById(character.MangaId);
									<p style="padding-top: 4px; display: flex; justify-content: center; text-align: center; color: white;">From manga: manga.Name</p>
								}
							</div>
						</a>
					}
				}
				else if (list.ContentType == "Character" && list.Name == "Disliked characters")
				{
					@foreach (object content in list.GetAllContent())
					{
						Character character = (Character)content;
						<a>
							<div style="width: 200px; position: relative;" class="d-flex flex-column align-items-center">
								<img src="@character.Image" style="height: 260px;" />
								<form method="post" style="position: absolute; top: 10px; left: 10px;" asp-page-handler="RemoveFromDisliked">
									<button type="submit" class="heart-button bg-transparent border-0 p-0" name="action" value="@character.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Remove from disliked">&#x1F494;</button>
								</form>
								<p style="padding-top: 8px; color: white;">@character.Name</p>
								@if (character.AnimeId != 0)
								{
									Anime anime = Model.GetAnimeById(character.AnimeId);
									<p style="padding-top: 8px; display: flex; justify-content: center; text-align: center; color: white;">From anime: @anime.Name</p>
								}
								@if (character.MangaId != 0)
								{
									Manga manga = Model.GetMangaById(character.MangaId);
									<p style="padding-top: 4px; display: flex; justify-content: center; text-align: center; color: white;">From manga: manga.Name</p>
								}
							</div>
						</a>
					}
				}
			</div>
		}
		else
		{
			<h4 style="font-style:italic; padding: 0; padding-bottom: 0.5rem;" class="second-subtitle text-white">This list doesn't have any content.</h4>
		}
	}
</div>



<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content bg-dark text-white">
			<div class="modal-header">
				<h3 class="modal-title" id="myModalLabel">Pick a list</h3>
				<button type="button" class="close" data-bs-dismiss="modal" aria-labelledby="myModal" aria-hidden="true">&times;</button>
			</div>
			<div class="modal-body">
				<form method="post">
					<div class="row">
						<div class="col">
							<ul class="list-group">
								@{
									// Calculate the midpoint to split the genres into two columns
									int midpoint = (Model.GetAllGenres().Count() + 1) / 2;

									//For each genre in the first column
									for (int i = 0; i < midpoint; i++)
									{
										Genre genre = Model.GetAllGenres()[i];
										string genreName = genre.ToString();
													<li class="list-group-item bg-dark text-white">
														<input type="checkbox" name="options[]" value="@genreName" @(Model.CurrentUser.Profile.GetAllPreferredGenres().Contains(genre) ? "checked" : "") />
														<label>@genreName</label>
													</li>
									}
								}
							</ul>
						</div>
						<div class="col">
							<ul class="list-group">
								@{
									//For each genre in the second column
									for (int i = midpoint; i < Model.GetAllGenres().Count(); i++)
									{
										Genre genre = Model.GetAllGenres()[i];
										string genreName = genre.ToString();
													<li class="list-group-item bg-dark text-white">
														<input type="checkbox" name="options[]" value="@genreName" @(Model.CurrentUser.Profile.GetAllPreferredGenres().Contains(genre) ? "checked" : "") />
														<label>@genreName</label>
													</li>
									}
								}
							</ul>
						</div>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-content-details" name="action" value="Submit">Submit</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>


